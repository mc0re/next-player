<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
		xmlns:common="http://nextplayer.nikitins.dk/Common"
		xmlns:res="http://nextplayer.nikitins.dk/Resources"
		xmlns:voice="http://nextplayer.nikitins.dk/VoiceLibrary"
		xmlns:local="clr-namespace:NextPlayer;assembly="
		x:Class="SettingsWindow"
		x:Name="Window"
		Title="Settings"
		Left="{local:SettingBinding SettingsWindowLeft}"
		Top="{local:SettingBinding SettingsWindowTop}"
		Width="{local:SettingBinding SettingsWindowWidth}"
		Height="{local:SettingBinding SettingsWindowHeight}"
		Background="{DynamicResource BackgroundBrush}"
		Foreground="{DynamicResource MainTextBrush}"
		Icon="../Resources/Logo.ico">

	<Window.Resources>
		<common:StringFormatConverter x:Key="StringFormatConverter"/>

        <RoutedUICommand x:Key="ShowLinkEditorCommand" Text="Show link editor window"/>
    </Window.Resources>
	

	<Window.CommandBindings>
		<CommandBinding Command="{StaticResource CloseWindowCommand}" Executed="CloseSettingsWindowCommandExecuted"/>
		<CommandBinding Command="{StaticResource CancelWindowCommand}" Executed="CancelSettingsWindowCommandExecuted"/>
		<CommandBinding Command="{StaticResource ReplaceFileCommand}" Executed="ReplaceFileCommandExecuted" CanExecute="ReplacePptFileCommandCanExecute"/>
		<CommandBinding Command="{StaticResource UpdateFileCommand}" Executed="UpdateFileCommandExecuted" CanExecute="HasPptFileCommandCanExecute"/>
		<CommandBinding Command="{StaticResource OpenPptCommand}" Executed="OpenPptCommandExecuted" CanExecute="HasPptFileCommandCanExecute"/>
        <CommandBinding Command="{StaticResource ShowLinkEditorCommand}" Executed="ShowLinkEditorCommandExecuted"/>
        <CommandBinding Command="{StaticResource TestVoiceFeedbackCommand}" Executed="TestVoiceFeedbackCommandExecuted" CanExecute="TestVoiceFeedbackCommandCanExecute"/>
    </Window.CommandBindings>

	
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
			<!--<RowDefinition Height="30"/>-->
		</Grid.RowDefinitions>

        <TabControl Style="{DynamicResource TabControlStyle}">
            <TabItem Style="{DynamicResource TabItemStyle}" Header="Playlist settings">
                <ScrollViewer Style="{DynamicResource ScrollViewerAutoStyle}">
                    <StackPanel>
                        <DockPanel>
                            <TextBlock Style="{DynamicResource ItemHeaderStyle}" VerticalAlignment="Center"
									Text="Presentation file:"/>

                            <Button DockPanel.Dock="Right" Style="{DynamicResource SquareImageButtonStyle}"
								Content="{DynamicResource OpenFileImage}" Height="22"
							    Command="{StaticResource ReplaceFileCommand}" CommandParameter="{Binding}"
								ToolTip="Choose file"/>

                            <Button DockPanel.Dock="Right" Style="{DynamicResource SquareImageButtonStyle}"
								Content="{DynamicResource UpdateFileImage}" Height="22"
							    Command="{StaticResource UpdateFileCommand}" CommandParameter="{Binding}"
								ToolTip="Update thumbnails (only needed if the presentation files names are the same)"/>

                            <Button DockPanel.Dock="Right" Style="{DynamicResource SquareImageButtonStyle}"
								Content="{DynamicResource OpenApplicationImage}" Height="22"
							    Command="{StaticResource OpenPptCommand}" CommandParameter="{Binding}"
								ToolTip="Open PowerPoint with this file"/>

                            <TextBlock Style="{DynamicResource MainTextStyle}" VerticalAlignment="Center" Margin="4,0"
									Text="{res:PlaylistBinding PresentationFile.ShortFileName}"/>
                        </DockPanel>

                        <DockPanel>
                            <CheckBox DockPanel.Dock="Left" Style="{DynamicResource CheckBoxStyle}"
									Content="Update slides"
									IsChecked="{res:ConfigBinding UseUpdateTimer}"/>

                            <xctk:IntegerUpDown DockPanel.Dock="Right" Style="{DynamicResource IntegerUpDownStyle}"
											Value="{res:ConfigBinding PowerPointUpdateInterval}"/>

                            <TextBlock Style="{DynamicResource MainTextStyle}"
									HorizontalAlignment="Right" VerticalAlignment="Center"
									Text="Update interval [minutes]"/>
                        </DockPanel>

                        <res:EnvironmentSelector Style="{DynamicResource EnvironmentSelectorStyle}" Padding="2,4">
                            <StackPanel>
								<CheckBox Style="{DynamicResource CheckBoxStyle}"
										Content="Allow click on progress bar in playlist"
										IsChecked="{res:ConfigBinding IsPositionChangeEnabled}"/>

								<CheckBox Style="{DynamicResource CheckBoxStyle}"
										Content="Allow drag-and-drop on playlist"
										IsChecked="{res:ConfigBinding IsEditEnabled}"/>

								<CheckBox Style="{DynamicResource CheckBoxStyle}"
										Content="Use NAudio (Media Player if unchecked)"
										IsChecked="{res:ConfigBinding UseNAudio}"
										ToolTip="Uncheck if you experience problems with regulating audio output, e.g. volume. When unchecked, a few features become unavailble."/>
                            </StackPanel>
                        </res:EnvironmentSelector>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Style="{DynamicResource TabItemStyle}" Header="Audio output">
                <ScrollViewer Style="{DynamicResource ScrollViewerAutoStyle}">
                    <local:AudioOutputEditorControl Style="{DynamicResource AudioOutputEditorStyle}"
													ShowLinkEditorCommand="{StaticResource ShowLinkEditorCommand}"/>
                </ScrollViewer>
            </TabItem>

            <TabItem Style="{DynamicResource TabItemStyle}" Header="Text output">
                <ScrollViewer Style="{DynamicResource ScrollViewerAutoStyle}">
                    <local:TextOutputEditorControl Style="{DynamicResource TextOutputEditorStyle}"/>
                </ScrollViewer>
            </TabItem>

            <TabItem Style="{DynamicResource TabItemStyle}" Header="Voice control">
                <ScrollViewer Style="{DynamicResource ScrollViewerAutoStyle}">
                    <voice:CommandConfigurationControl Style="{DynamicResource VoiceConfigurationStyle}"
												 ItemsSource="{Binding VoiceCommands, ElementName=Window}"/>
                </ScrollViewer>
            </TabItem>

            <TabItem Style="{DynamicResource TabItemStyle}" Header="Appearance">
                <ScrollViewer Style="{DynamicResource ScrollViewerAutoStyle}">
                    <StackPanel>
                        <CheckBox Style="{DynamicResource CheckBoxStyle}"
								Content="Use visual settings for manually started items"
								IsChecked="{res:PlaylistBinding UseSettingsForManual}"/>

						<res:SkinEditorControl Name="SkinEditor" Style="{DynamicResource SkinEditorStyle}"/>

                        <DockPanel LastChildFill="False">
                            <Button DockPanel.Dock="Left"
									Style="{DynamicResource SquareImageButtonStyle}"
									Content="{StaticResource DeleteWindowImage}"
									Command="{Binding SetDefaultSkinCommand, ElementName=SkinEditor}"
									ToolTip="Set default skin"/>

                            <Button DockPanel.Dock="Left"
									Style="{DynamicResource SquareImageButtonStyle}"
									Content="{StaticResource OpenFileImage}"
									Command="{Binding LoadSkinCommand, ElementName=SkinEditor}"
									ToolTip="Load skin from file"/>

                            <Button DockPanel.Dock="Left"
									Style="{DynamicResource SquareImageButtonStyle}"
									Content="{StaticResource SaveFileImage}"
									Command="{Binding SaveSkinCommand, ElementName=SkinEditor}"
									ToolTip="Save skin to file"/>
                        </DockPanel>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
		
		<!--<DockPanel Grid.Row="1">
			<Button DockPanel.Dock="Right" Style="{DynamicResource RectButtonStyle}"
					HorizontalAlignment="Right"
					Content="Ok" IsDefault="True" Command="{StaticResource CloseWindowCommand}"/>
			
			--><!--<Button DockPanel.Dock="Right" Style="{DynamicResource RectButtonStyle}"
					HorizontalAlignment="Right"
					Content="Cancel" IsCancel="True" Command="{StaticResource CloseWindowCommand}"/>--><!--
		</DockPanel>-->
	</Grid>
</Window>