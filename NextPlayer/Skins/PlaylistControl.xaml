<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:act="http://schemas.nikitins.dk/actions"
    xmlns:local="clr-namespace:NextPlayer;assembly="
    xmlns:res="http://nextplayer.nikitins.dk/Resources"
    xmlns:common="http://nextplayer.nikitins.dk/Common">

    <res:BooleanToVisibilityConverter x:Key="BooleanToVisibleCollapsedConverter"/>
    <res:BooleanToVisibilityConverter x:Key="BooleanToVisibleHiddenConverter" FalseValue="Hidden"/>
	<res:BooleanToWrapConverter x:Key="BooleanToWrapConverter"/>
	<res:TimeSpanFormatConverter x:Key="TimeSpanFormatConverter"/>
	<res:EnumToVisibilityConverter x:Key="EnumToVisibleCollapsedConverter"/>
	<res:StringToOneLineConverter x:Key="StringToOneLineConverter"/>
	<res:BooleanAndConverter x:Key="BooleanAndConverter"/>
    <res:DelayTypeToStringConverter x:Key="DelayTypeToStringConverter"/>
    <local:SlideIndexToImageConverter x:Key="SlideIndexToImageConverter"/>
	<local:SlideIndexToTextConverter x:Key="SlideIndexToTextConverter"/>
	<common:StringFormatConverter x:Key="StringFormatConverter"/>

	
	<!-- Unsupported action, should never appear -->
	<DataTemplate x:Key="PlaylistItemUnsupportedTemplate">
		<TextBlock Style="{DynamicResource PlaylistTextStyle}" Text="Unsupported action"/>
	</DataTemplate>


	<!-- No action -->
	<DataTemplate x:Key="PlaylistItemPlaceholderTemplate">
		<TextBlock Style="{DynamicResource PlaylistTextStyle}" Text="No action"/>
	</DataTemplate>


	<!-- File -->
	<DataTemplate x:Key="PlaylistItemFileTemplate" DataType="{x:Type act:PlayerActionFile}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>
			
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto" SharedSizeGroup="TimeGroup"/>
			</Grid.ColumnDefinitions>

			<res:ActionStatusIndicator Grid.RowSpan="2" Style="{DynamicResource ActionStatusIndicatorStyle}"
									   Action="{Binding}"/>

			<res:ParallelPlayButton Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
									Style="{DynamicResource ParallelPlayFileButtonStyle}"/>

            <Grid Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
				  Height="36" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                  Margin="3">

                <!-- Only show the reference icons for parallel non-manual actions -->
                <Grid.Visibility>
                    <MultiBinding Converter="{StaticResource BooleanToVisibleCollapsedConverter}">
                        <Binding Path="ExecutionType" Converter="{StaticResource EnumToTrueFalseConverter}" ConverterParameter="Parallel"/>
                        <Binding Path="DelayType" Converter="{StaticResource EnumToFalseTrueConverter}" ConverterParameter="Manual"/>
                    </MultiBinding>
                </Grid.Visibility>

                <Image Margin="5"
                       Visibility="{Binding DelayReference, Converter={StaticResource EnumToVisibleCollapsedConverter}, ConverterParameter=MainClock}"
					   Source="{DynamicResource DelayReferencePlayClockImage}"
                       Opacity="{res:ConfigBinding ReferenceIconOpacity, Mode=OneWay}">
                    <Image.ToolTip>
                        <TextBlock>
                            <Run Text="After playing for"/>
							<Run Text="{Binding DelayBefore}"/>
                        </TextBlock>
                    </Image.ToolTip>
                </Image>

                <Image Margin="5"
                       Visibility="{Binding DelayReference, Converter={StaticResource EnumToVisibleCollapsedConverter}, ConverterParameter=WallClock}"
					   Source="{DynamicResource DelayReferenceWallClockImage}"
                       Opacity="{res:ConfigBinding ReferenceIconOpacity, Mode=OneWay}">
                    <Image.ToolTip>
                        <TextBlock>
                            <Run Text="At time"/>
							<Run Text="{Binding DelayBefore}"/>
                        </TextBlock>
                    </Image.ToolTip>
                </Image>

                <Image Margin="5"
                       Visibility="{Binding DelayReference, Converter={StaticResource EnumToVisibleCollapsedConverter}, ConverterParameter=LastAction}"
					   Source="{DynamicResource DelayReferenceActionImage}"
                       Opacity="{res:ConfigBinding ReferenceIconOpacity, Mode=OneWay}">
                    <Image.ToolTip>
                        <TextBlock>
							<Run Text="{Binding DelayBefore}"/>
							<Run Text="{Binding DelayType, Converter={StaticResource DelayTypeToStringConverter}}"/>
							<Run Text="{Binding ReferenceAction.Name}"/>
                        </TextBlock>
                    </Image.ToolTip>
                </Image>

                <Image Margin="5"
                       Visibility="{Binding DelayReference, Converter={StaticResource EnumToVisibleCollapsedConverter}, ConverterParameter=LastProducer}"
					   Source="{DynamicResource DelayReferenceProducerImage}"
                       Opacity="{res:ConfigBinding ReferenceIconOpacity, Mode=OneWay}">
                    <Image.ToolTip>
                        <TextBlock>
							<Run Text="{Binding DelayBefore}"/>
							<Run Text="{Binding DelayType, Converter={StaticResource DelayTypeToStringConverter}}"/>
							<Run Text="{Binding ReferenceAction.Name}"/>
                        </TextBlock>
                    </Image.ToolTip>
                </Image>
            </Grid>

            <TextBlock Name="textName" Grid.Row="0" Grid.Column="2"
                       Style="{DynamicResource PlaylistTextStyle}"
					   Text="{Binding Name}" TextWrapping="Wrap"/>

			<res:EffectListControl Grid.Row="0" Grid.Column="2"
                                     Style="{DynamicResource EffectListControlStyle}"
									 HorizontalAlignment="Right" VerticalAlignment="Top"/>

			<res:PlayPositionControl Grid.Column="2" Grid.Row="1"
									 Style="{DynamicResource PlayPositionWaveformStyle}"
									 Position="{Binding PlayPosition}"
									 Maximum="{Binding Duration.TotalMilliseconds, Mode=OneWay}"
									 IsEnabled="{res:ConfigBinding IsPositionChangeEnabled}"
									 TrackOverlay="{DynamicResource StartStopOverlayItemTemplate}"/>

			<TextBlock Name="textDuration" Grid.Row="0" Grid.Column="3"
					   Style="{DynamicResource PlaylistTextStyle}" HorizontalAlignment="Right" Margin="5,0,0,0"
					   Text="{Binding Duration, Converter={StaticResource TimeSpanFormatConverter}, ConverterParameter='{}{0:mm\\:ss}'}"
                       ToolTip="Duration (minutes:seconds)" ToolTipService.ShowOnDisabled="True"/>
			
			<TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="3" Grid.Row="1"
					   Style="{DynamicResource MainTextStyle}"
					   Text="{Binding PlayPosition, Converter={StaticResource TimeSpanFormatConverter}, ConverterParameter='{}{0:mm\\:ss}'}"
					   Visibility="{Binding IsPlaying, Converter={StaticResource BooleanToVisibleCollapsedConverter}}"
                       ToolTip="Playing position (minutes:seconds)" ToolTipService.ShowOnDisabled="True"/>
		</Grid>
		
    	<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding IsLoadingFailed}" Value="True">
				<Setter Property="Style" TargetName="textName" Value="{DynamicResource FailedTextStyle}"/>
				<Setter Property="Visibility" TargetName="textDuration" Value="Collapsed"/>
			</DataTrigger>
		</DataTemplate.Triggers>
    </DataTemplate>


	<!-- Effect -->
	<DataTemplate x:Key="PlaylistItemEffectTemplate" DataType="{x:Type act:PlayerActionEffect}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto" SharedSizeGroup="TimeGroup"/>
			</Grid.ColumnDefinitions>
			
			<res:ActionStatusIndicator Grid.RowSpan="2" Style="{DynamicResource ActionStatusIndicatorStyle}"
									   Action="{Binding}"
									   Foreground="{DynamicResource EffectPlainBrush}"/>

			<res:ParallelPlayButton Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
									  Style="{DynamicResource ParallelPlayEffectButtonStyle}"/>

			<TextBlock Grid.Row="0" Grid.Column="2"
                       Style="{DynamicResource PlaylistTextStyle}" TextWrapping="Wrap"
					   Text="{Binding Name}"/>

			<res:PointListProgressVisualizer Style="{DynamicResource PointListVisualizerStyle}"
											   Grid.Row="1" Grid.Column="2"
											   Height="14"
											   DataContext="{Binding}"
											   Points="{Binding AutomationPointList}"
											   Position="{Binding PlayPosition}"
											   ShowEndBar="{Binding HasDuration}"
											   IsIndicatorMoveable="{Binding IsPlaying}">
				
				<res:PointListProgressVisualizer.Duration>
					<MultiBinding Converter="{StaticResource MaxPositionConverter}">
						<Binding Path="AutomationPointList"/>
						<Binding Path="HasDuration"/>
						<Binding Path="Duration"/>
						<Binding Source="1"/>
						<Binding Path="PointsVersion" RelativeSource="{RelativeSource Self}"/>
					</MultiBinding>
				</res:PointListProgressVisualizer.Duration>
			</res:PointListProgressVisualizer>

			<TextBlock Name="textDuration" Grid.Row="0" Grid.Column="3"
					   Style="{DynamicResource PlaylistTextStyle}" HorizontalAlignment="Right"
					   Text="{Binding Duration, Converter={StaticResource TimeSpanFormatConverter}, ConverterParameter='{}{0:mm\\:ss}'}"
					   Visibility="{Binding HasDuration, Converter={StaticResource BooleanToVisibleHiddenConverter}}"/>

			<TextBlock Name="textPosition" Grid.Column="3" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Center"
					   Style="{DynamicResource MainTextStyle}"
					   Text="{Binding PlayPosition, Converter={StaticResource TimeSpanFormatConverter}, ConverterParameter='{}{0:mm\\:ss}'}"
					   Visibility="{Binding IsPlaying, Converter={StaticResource BooleanToVisibleCollapsedConverter}}"/>
		</Grid>
    </DataTemplate>


	<!-- Comment -->
	<DataTemplate x:Key="PlaylistItemCommentTemplate" DataType="{x:Type act:PlayerActionComment}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			
			<TextBlock x:Name="textName" Style="{DynamicResource CommentTextStyle}"
					   VerticalAlignment="Center"
					   TextWrapping="{Binding IsEnabled, Converter={StaticResource BooleanToWrapConverter}}"
					   Text="{Binding Name}"/>
		</Grid>
		
		<DataTemplate.Triggers>
			<DataTrigger Binding="{Binding IsEnabled}" Value="False">
				<Setter Property="Style" TargetName="textName" Value="{DynamicResource DisabledCommentTextStyle}"/>
			</DataTrigger>
		</DataTemplate.Triggers>
    </DataTemplate>


	<!-- PowerPoint -->
	<DataTemplate x:Key="PlaylistItemPptCommandTemplate" DataType="{x:Type act:PlayerActionPowerPoint}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>

			<res:ActionStatusIndicator Grid.RowSpan="2" Style="{DynamicResource ActionStatusIndicatorStyle}"
									   Action="{Binding}"/>

			<res:ParallelPlayButton Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
									  Style="{DynamicResource ParallelPlayFileButtonStyle}"/>

			<TextBlock x:Name="textName" Grid.Row="0" Grid.Column="2"
                       Style="{DynamicResource PlaylistTextStyle}" TextWrapping="Wrap"
					   Text="{Binding Name}"/>

			<Grid Grid.Column="2" Grid.Row="1">
				<TextBlock Style="{DynamicResource MainTextStyle}"
						   Visibility="{Binding SetSlideAction, ConverterParameter={x:Static act:SetSlideActions.SetNext}, Converter={StaticResource EnumToVisibleCollapsedConverter}}"
						   Text="Next slide"/>
				
				<TextBlock Style="{DynamicResource MainTextStyle}"
						   Visibility="{Binding SetSlideAction, ConverterParameter={x:Static act:SetSlideActions.SetPrevious}, Converter={StaticResource EnumToVisibleCollapsedConverter}}"
						   Text="Previous slide"/>
				
				<StackPanel Orientation="Horizontal"
							Visibility="{Binding SetSlideAction, ConverterParameter={x:Static act:SetSlideActions.SetByIndex}, Converter={StaticResource EnumToVisibleCollapsedConverter}}">
					
					<TextBlock Style="{DynamicResource MainTextStyle}"
							   Text="{Binding SlideIndex, Converter={StaticResource StringFormatConverter}, ConverterParameter='Slide {0}'}"/>
					<TextBlock Style="{DynamicResource MainTextStyle}">
						<TextBlock.Text>
							<MultiBinding Converter="{StaticResource SlideIndexToTextConverter}" StringFormat=": {0}">
								<Binding Path="SlideIndex"/>
								<Binding Path="PresenterIndex"/>
								<res:ConfigBinding Path="PresenterVersion"/>
							</MultiBinding>
						</TextBlock.Text>
					</TextBlock>
				</StackPanel>
			</Grid>

			<Image Grid.Column="3" Grid.Row="0" Grid.RowSpan="2" Height="36"
                   Stretch="Uniform" HorizontalAlignment="Right">
				
				<Image.Source>
					<MultiBinding Converter="{StaticResource SlideIndexToImageConverter}">
						<Binding Path="SlideIndex"/>
						<Binding Path="PresenterIndex"/>
						<res:ConfigBinding Path="PresenterVersion"/>
					</MultiBinding>
				</Image.Source>
                
				<Image.Visibility>
					<MultiBinding Converter="{StaticResource BooleanToVisibleCollapsedConverter}">
						<Binding Path="SetSlideAction" ConverterParameter="{x:Static act:SetSlideActions.SetByIndex}" Converter="{StaticResource EnumToTrueFalseConverter}"/>
					</MultiBinding>
				</Image.Visibility>
			</Image>
		</Grid>
	</DataTemplate>


	<!-- Text -->
	<DataTemplate x:Key="PlaylistItemTextTemplate" DataType="{x:Type act:PlayerActionText}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>

			<res:ActionStatusIndicator Grid.RowSpan="2" Style="{DynamicResource ActionStatusIndicatorStyle}"
									   Action="{Binding}"/>

			<res:ParallelPlayButton Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
									  Style="{DynamicResource ParallelPlayFileButtonStyle}"/>

			<TextBlock Grid.Row="0" Grid.Column="2" Style="{DynamicResource PlaylistTextStyle}"
					   Text="{Binding Name}" TextTrimming="CharacterEllipsis"/>

			<StackPanel Grid.Column="2" Grid.Row="1" Orientation="Horizontal">
				<TextBlock Style="{DynamicResource MainTextStyle}"
						   Text="{Binding Text, Converter={StaticResource StringToOneLineConverter}}"/>
			</StackPanel>
		</Grid>
	</DataTemplate>


	<!-- Collect the resources above -->
	<res:TypedTemplateSelector x:Key="PlaylistTemplateSelector" DefaultTemplate="{StaticResource PlaylistItemUnsupportedTemplate}">
		<res:TypedTemplateDefinition DataType="{x:Type act:PlayerActionFile}" Template="{StaticResource PlaylistItemFileTemplate}" />
		<res:TypedTemplateDefinition DataType="{x:Type act:PlayerActionEffect}" Template="{StaticResource PlaylistItemEffectTemplate}" />
		<res:TypedTemplateDefinition DataType="{x:Type act:PlayerActionPowerPoint}" Template="{StaticResource PlaylistItemPptCommandTemplate}" />
		<res:TypedTemplateDefinition DataType="{x:Type act:PlayerActionComment}" Template="{StaticResource PlaylistItemCommentTemplate}" />
		<res:TypedTemplateDefinition DataType="{x:Type act:PlayerActionText}" Template="{StaticResource PlaylistItemTextTemplate}" />
		<res:TypedTemplateDefinition DataType="{x:Type act:PlayerActionPlaceholder}" Template="{StaticResource PlaylistItemPlaceholderTemplate}" />
	</res:TypedTemplateSelector>


	<!-- Container -->
	<ControlTemplate x:Key="PlaylistItemContainerTemplate" TargetType="{x:Type res:PlaylistItem}">
		<Grid Background="{TemplateBinding Background}">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>

			<!-- Drop mark "before" -->
			<Border Name="TopDrag" Visibility="Collapsed"
					VerticalAlignment="Top" Height="2"
					Background="{TemplateBinding DragPositionBrush}"/>

			<!-- Separator line -->
			<Rectangle Grid.Row="1"
					   SnapsToDevicePixels="True" HorizontalAlignment="Stretch"
					   Fill="{DynamicResource FrameBrush}" Height="1"/>
			
			<Grid Grid.Row="2" SnapsToDevicePixels="True">
				<Border Name="Outline"
						Panel.ZIndex="1"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{res:SkinBinding NextBorder, ConverterType={x:Type res:ThicknessValueConverter}}"/>
					
				<ContentPresenter Name="Content"
								  Margin="1,0,3,0"
								  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</Grid>
			
			<!-- Drop mark "after" -->
			<Border Name="BottomDrag" Grid.Row="3" Visibility="Collapsed"
					VerticalAlignment="Bottom" Height="2"
					Background="{TemplateBinding DragPositionBrush}"/>
		</Grid>
		
		<ControlTemplate.Triggers>
			<Trigger Property="IsDraggingOverTop" Value="True">
				<Setter Property="Visibility" TargetName="TopDrag" Value="Visible"/>
			</Trigger>
			<Trigger Property="IsDraggingOverBottom" Value="True">
				<Setter Property="Visibility" TargetName="BottomDrag" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	
	<Style x:Key="PlaylistItemContainerStyle" TargetType="{x:Type res:PlaylistItem}">
    	<Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type res:PlaylistControl}}}"/>
		<Setter Property="Template" Value="{DynamicResource PlaylistItemContainerTemplate}"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="IsSelectedItem" Value="{Binding IsSelected, RelativeSource={RelativeSource Self}}"/>
		<Setter Property="DragPositionBrush" Value="{DynamicResource ActionButtonPlainBrush}"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		
		<Style.Triggers>
			<DataTrigger Binding="{Binding IsEnabled}" Value="False">
				<Setter Property="Opacity" Value="{StaticResource DisabledElementOpacity}"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding IsNext}" Value="True">
				<Setter Property="Background" Value="{DynamicResource NextBackgroundBrush}"/>
				<Setter Property="BorderBrush" Value="{DynamicResource NextFrameBrush}"/>
			</DataTrigger>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{DynamicResource SelectedBackgroundBrush}"/>
				<Setter Property="BorderBrush" Value="{DynamicResource SelectedFrameBrush}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
    
    
    <ControlTemplate x:Key="PlaylistControlTemplate" TargetType="{x:Type res:PlaylistControl}">
        <Grid SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

			<TextBlock Style="{DynamicResource ItemHeaderStyle}"
					   Text="{Binding ActionList.Name}"/>

			<Rectangle Grid.Row="1" Stroke="{TemplateBinding BorderBrush}"
					   Height="{Binding BorderThickness.Top, RelativeSource={RelativeSource TemplatedParent}}"/>
			
			<ScrollViewer Grid.Row="2" Style="{DynamicResource ScrollViewerStyle}"
						  CanContentScroll="False">
				<StackPanel>
					<ItemsPresenter Grid.IsSharedSizeScope="True">
						<ItemsPresenter.InputBindings>
							<KeyBinding Key="Delete" Command="{StaticResource DeleteFileCommand}" />
							<KeyBinding Key="Up" Modifiers="Ctrl" Command="{StaticResource ListItemUpCommand}" />
							<KeyBinding Key="Down" Modifiers="Ctrl" Command="{StaticResource ListItemDownCommand}" />
							<KeyBinding Key="Enter" Command="{StaticResource SetActiveCommand}" />
							<KeyBinding Key="Space" Command="{StaticResource PlayNextCommand}" />
							<KeyBinding Key="X" Command="{StaticResource PlayNextCommand}" />
							<KeyBinding Key="Z" Command="{StaticResource PlayAgainCommand}" />
							<KeyBinding Key="S" Command="{StaticResource StopCommand}" />
							<KeyBinding Key="D" Command="{StaticResource ResumeCommand}" />
							<KeyBinding Key="R" Command="{StaticResource ResetPlaylistCommand}" />
							<KeyBinding Key="OemPeriod" Command="{StaticResource AddAutoVolumeCommand}" />
							<KeyBinding Key="OemSemicolon" Command="{StaticResource AddCommentCommand}" />

							<KeyBinding Key="D1" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="1" />
							<KeyBinding Key="D2" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="2" />
							<KeyBinding Key="D3" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="3" />
							<KeyBinding Key="D4" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="4" />
							<KeyBinding Key="D5" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="5" />
							<KeyBinding Key="D6" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="6" />
							<KeyBinding Key="D7" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="7" />
							<KeyBinding Key="D8" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="8" />
							<KeyBinding Key="D9" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="9" />
							<KeyBinding Key="D0" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="10" />
                            <KeyBinding Key="D1" Modifiers="Shift" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="11" />
                            <KeyBinding Key="D2" Modifiers="Shift" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="12" />
                            <KeyBinding Key="D3" Modifiers="Shift" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="13" />
                            <KeyBinding Key="D4" Modifiers="Shift" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="14" />
                            <KeyBinding Key="D5" Modifiers="Shift" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="15" />
                            <KeyBinding Key="D6" Modifiers="Shift" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="16" />
                            <KeyBinding Key="D7" Modifiers="Shift" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="17" />
                            <KeyBinding Key="D8" Modifiers="Shift" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="18" />
                            <KeyBinding Key="D9" Modifiers="Shift" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="19" />
                            <KeyBinding Key="D0" Modifiers="Shift" Command="{StaticResource PlayStopParallelCommand}" CommandParameter="20" />
                        </ItemsPresenter.InputBindings>
					</ItemsPresenter>

					<Border Visibility="{Binding IsDraggingToEnd, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibleCollapsedConverter}}"
							Height="2"
							Background="{DynamicResource ActionButtonPlainBrush}"/>
				</StackPanel>
			</ScrollViewer>

			<Rectangle Grid.Row="3" Stroke="{TemplateBinding BorderBrush}"
					   Height="{Binding BorderThickness.Bottom, RelativeSource={RelativeSource TemplatedParent}}"/>

			<DockPanel Grid.Row="4" LastChildFill="False">
				<Button Style="{DynamicResource RoundImageButtonStyle}" Content="{DynamicResource AddFileButtonImage}"
						Command="{StaticResource AddFilesCommand}"
						ToolTipService.ShowOnDisabled="True" ToolTip="Add files"/>
				<Button Style="{DynamicResource RoundImageButtonStyle}" Content="{DynamicResource AddEffectButtonImage}"
						Command="{StaticResource AddAutoVolumeCommand}"
						ToolTipService.ShowOnDisabled="True" ToolTip="Add automation"/>
				<Button Style="{DynamicResource RoundImageButtonStyle}" Content="{DynamicResource AddPptButtonImage}"
						Command="{StaticResource AddPowerPointCommand}"
						ToolTipService.ShowOnDisabled="True" ToolTip="Add slide control"/>
				<Button Style="{DynamicResource RoundImageButtonStyle}" Content="{DynamicResource AddTextButtonImage}"
						Command="{StaticResource AddTextCommand}"
						ToolTipService.ShowOnDisabled="True" ToolTip="Add shown text"/>
				<Button Style="{DynamicResource RoundImageButtonStyle}" Content="{DynamicResource AddCommentButtonImage}"
						Command="{StaticResource AddCommentCommand}"
						ToolTipService.ShowOnDisabled="True" ToolTip="Add comment"/>
				<Button Style="{DynamicResource RoundImageButtonStyle}" Content="{DynamicResource DeleteButtonImage}"
						Command="{StaticResource DeleteFileCommand}"
						ToolTipService.ShowOnDisabled="True" ToolTip="Remove selected action"/>
				<Button Style="{DynamicResource RoundImageButtonStyle}" Content="{DynamicResource MoveDownButtonImage}" DockPanel.Dock="Right"
						Command="{StaticResource ListItemDownCommand}"
						ToolTipService.ShowOnDisabled="True" ToolTip="Move selected action down"/>
				<Button Style="{DynamicResource RoundImageButtonStyle}" Content="{DynamicResource MoveUpButtonImage}" DockPanel.Dock="Right"
						Command="{StaticResource ListItemUpCommand}"
						ToolTipService.ShowOnDisabled="True" ToolTip="Move selected action up"/>
            </DockPanel>
        </Grid>
    </ControlTemplate>

    
    <Style TargetType="{x:Type res:PlaylistControl}">
        <Setter Property="Template" Value="{StaticResource PlaylistControlTemplate}"/>
		<Setter Property="ItemContainerStyle" Value="{DynamicResource PlaylistItemContainerStyle}"/>
		<Setter Property="ItemTemplateSelector" Value="{DynamicResource PlaylistTemplateSelector}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		<!-- We have to use CurrentEnvironment here, as XAML uses a parameterless binding constructor -->
        <Setter Property="AllowDrop" Value="{res:ConfigBinding CurrentEnvironment.IsEditEnabled}"/>
        <Setter Property="BorderThickness" Value="1"/>
		<!--<Setter Property="Focusable" Value="False"/>-->
	</Style>
	
</ResourceDictionary>
