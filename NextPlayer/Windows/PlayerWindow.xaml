<Window x:Name="Window" x:Class="PlayerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:res="http://nextplayer.nikitins.dk/Resources"
		xmlns:local="clr-namespace:NextPlayer;assembly="
		xmlns:common="http://nextplayer.nikitins.dk/Common"
		DataContext="{Binding RelativeSource={RelativeSource Self}}"
		Background="{DynamicResource BackgroundBrush}"
		Foreground="{DynamicResource MainTextBrush}"
		Left="{res:ConfigBinding PlayerWindowPosition.Left}"
		Top="{res:ConfigBinding PlayerWindowPosition.Top}"
		Width="{res:ConfigBinding PlayerWindowPosition.Width}"
		Height="{res:ConfigBinding PlayerWindowPosition.Height}"
		MinWidth="700">

	<Window.Resources>
		<res:PlayerActionPlaceholderConverter x:Key="PlayerActionPlaceholderConverter"/>
		<res:EnumToBooleanConverter x:Key="EnumToTrueFalseFollowConverter" NonMatchEnumValue="None"/>
		<common:StringFormatConverter x:Key="StringFormatConverter"/>
	</Window.Resources>

	
	<Window.Title>
		<MultiBinding StringFormat="{}{0} - {1}">
			<Binding Path="AppName"/>
			<Binding Path="ActionList.Name"/>
		</MultiBinding>
	</Window.Title>

	
    <Window.CommandBindings>
        <!-- Needed here, otherwise the command is disabled. -->
		<CommandBinding Command="ApplicationCommands.Close" Executed="CloseCommandExecuted"/>
		
		<!-- Playlist load and add commands -->
		<CommandBinding Command="{StaticResource LoadPlaylistCommand}" Executed="LoadPlaylistCommandExecuted"/>
		<CommandBinding Command="{StaticResource SavePlaylistCommand}" Executed="SavePlaylistCommandExecuted" CanExecute="SavePlaylistCommandCanExecute"/>
		<CommandBinding Command="{StaticResource NewPlaylistCommand}" Executed="NewPlaylistCommandExecuted"/>
		<CommandBinding Command="{StaticResource AddFilesCommand}" Executed="AddFilesCommandExecuted" CanExecute="AddFilesCommandCanExecute"/>
		<CommandBinding Command="{StaticResource AddAutoVolumeCommand}" Executed="AddAutoVolumeCommandExecuted" CanExecute="AddAutoVolumeCommandCanExecute"/>
		<CommandBinding Command="{StaticResource AddCommentCommand}" Executed="AddCommentCommandExecuted" CanExecute="AddCommentCommandCanExecute"/>
		<CommandBinding Command="{StaticResource AddPowerPointCommand}" Executed="AddPowerPointCommandExecuted" CanExecute="AddPowerPointCommandCanExecute"/>
		<CommandBinding Command="{StaticResource AddTextCommand}" Executed="AddTextCommandExecuted" CanExecute="AddTextCommandCanExecute"/>

		<!-- Playlist modification commands -->
		<CommandBinding Command="{StaticResource DeleteFileCommand}" Executed="DeleteFileCommandExecuted" CanExecute="ListModificationCommandCanExecute"/>
		<CommandBinding Command="{StaticResource ListItemUpCommand}" Executed="ListItemUpCommandExecuted" CanExecute="ListModificationCommandCanExecute"/>
		<CommandBinding Command="{StaticResource ListItemDownCommand}" Executed="ListItemDownCommandExecuted" CanExecute="ListModificationCommandCanExecute"/>
		<CommandBinding Command="{StaticResource ReplaceFileCommand}" Executed="ReplaceFileCommandExecuted" CanExecute="ReplaceFileCommandCanExecute"/>
		
		<!-- Playlist control commands -->
		<CommandBinding Command="{StaticResource SetActiveCommand}" Executed="SetActiveCommandExecuted" CanExecute="IsSelectionPlayableCommandCanExecute"/>
        <CommandBinding Command="{StaticResource StopActionCommand}" Executed="StopActionCommandExecuted" CanExecute="IsSelectionPlayableCommandCanExecute"/>
		<CommandBinding Command="{StaticResource SetNextCommand}" Executed="SetNextCommandExecuted" CanExecute="IsSelectionPlayableMainCommandCanExecute"/>
		<CommandBinding Command="{StaticResource PlayNextCommand}" Executed="PlayNextCommandExecuted" CanExecute="HasNextActionCommandCanExecute"/>
		<CommandBinding Command="{StaticResource PlayAgainCommand}" Executed="PlayAgainCommandExecuted" CanExecute="HasActiveActionCommandCanExecute"/>
		<CommandBinding Command="{StaticResource StopCommand}" Executed="StopCommandExecuted" CanExecute="IsPlayingCommandCanExecute"/>
		<CommandBinding Command="{StaticResource ResumeCommand}" Executed="ResumeCommandExecuted" CanExecute="IsResumeCommandCanExecute"/>
		<CommandBinding Command="{StaticResource ResetPlaylistCommand}" Executed="ResetPlaylistCommandExecuted"/>
		<CommandBinding Command="{StaticResource StartPlaylistCommand}" Executed="StartPlaylistCommandExecuted"/>
		<CommandBinding Command="{StaticResource PlayStopParallelCommand}" Executed="PlayStopParallelCommandExecuted"/>
		<CommandBinding Command="{StaticResource SelectActionCommand}" Executed="SelectActionCommandExecuted"/>
		<CommandBinding Command="{StaticResource ExecuteActionCommand}" Executed="ExecuteActionCommandExecuted"/>
		
		<!-- Audio control commands -->
		<CommandBinding Command="{StaticResource RelativeVolumeUpCommand}" Executed="RelativeVolumeUpCommandExecuted" CanExecute="VolumeCommandCanExecute"/>
		<CommandBinding Command="{StaticResource RelativeVolumeDownCommand}" Executed="RelativeVolumeDownCommandExecuted" CanExecute="VolumeCommandCanExecute"/>
		<CommandBinding Command="{StaticResource PlaySampleCommand}" Executed="PlaySampleCommandExecuted"/>
		<CommandBinding Command="{StaticResource MaxVolumeCommand}" Executed="MaxVolumeCommandExecuted" CanExecute="VolumeCommandCanExecute"/>
		<CommandBinding Command="{StaticResource VolumeUpCommand}" Executed="VolumeUpCommandExecuted" CanExecute="VolumeCommandCanExecute"/>
		<CommandBinding Command="{StaticResource VolumeDownCommand}" Executed="VolumeDownCommandExecuted" CanExecute="VolumeCommandCanExecute"/>
		<CommandBinding Command="{StaticResource PanningLeftCommand}" Executed="PanningLeftCommandExecuted" CanExecute="PanningCommandCanExecute"/>
		<CommandBinding Command="{StaticResource PanningRightCommand}" Executed="PanningRightCommandExecuted" CanExecute="PanningCommandCanExecute"/>
		<CommandBinding Command="{StaticResource CoordinateXDownCommand}" Executed="CoordinateXDownCommandExecuted" CanExecute="CoordinateCommandCanExecute"/>
		<CommandBinding Command="{StaticResource CoordinateXUpCommand}" Executed="CoordinateXUpCommandExecuted" CanExecute="CoordinateCommandCanExecute"/>
		<CommandBinding Command="{StaticResource CoordinateYDownCommand}" Executed="CoordinateYDownCommandExecuted" CanExecute="CoordinateCommandCanExecute"/>
		<CommandBinding Command="{StaticResource CoordinateYUpCommand}" Executed="CoordinateYUpCommandExecuted" CanExecute="CoordinateCommandCanExecute"/>
		<CommandBinding Command="{StaticResource CoordinateZDownCommand}" Executed="CoordinateZDownCommandExecuted" CanExecute="CoordinateCommandCanExecute"/>
		<CommandBinding Command="{StaticResource CoordinateZUpCommand}" Executed="CoordinateZUpCommandExecuted" CanExecute="CoordinateCommandCanExecute"/>

		<!-- Other commands -->
		<CommandBinding Command="{StaticResource ShowSettingsCommand}" Executed="ShowSettingsCommandExecuted"/>
		<CommandBinding Command="{StaticResource PrintCommand}" Executed="PrintCommandExecuted" CanExecute="PrintCommandCanExecute"/>
		<CommandBinding Command="{StaticResource ExportCommand}" Executed="ExportCommandExecuted"/>
		<CommandBinding Command="{StaticResource ShowAboutCommand}" Executed="ShowAboutCommandExecuted"/>
		<CommandBinding Command="{StaticResource CloseWindowCommand}" Executed="CloseWindowCommandExecuted"/>
		<CommandBinding Command="{StaticResource SelectActiveCommand}" Executed="SelectActiveCommandExecuted" CanExecute="HasActiveActionCommandCanExecute"/>
		<CommandBinding Command="{StaticResource SelectNextCommand}" Executed="SelectNextCommandExecuted" CanExecute="HasNextActionCommandCanExecute"/>

		<CommandBinding Command="{StaticResource ShowTextWindowCommand}" Executed="ShowTextWindowCommandExecuted"/>
		<CommandBinding Command="{StaticResource WhatCanISayCommand}" Executed="WhatCanISayCommandExecuted"/>
		<CommandBinding Command="{StaticResource ListTriggersCommand}" Executed="ListTriggersCommandExecuted"/>
    </Window.CommandBindings>

    
    <Window.InputBindings>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{StaticResource LoadPlaylistCommand}" CommandTarget="{Binding ElementName=Playlist}"/>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{StaticResource SavePlaylistCommand}" CommandTarget="{Binding ElementName=Playlist}"/>
		<KeyBinding Key="MediaNextTrack" Command="{StaticResource PlayNextCommand}"/>
		<KeyBinding Key="MediaPlayPause" Command="{StaticResource StopCommand}"/>
		<KeyBinding Key="MediaStop" Command="{StaticResource StopCommand}"/>
    </Window.InputBindings>


	<Grid>
        <Grid.ColumnDefinitions>
			<ColumnDefinition Width="{res:ConfigBinding MainWindowSplit}" MinWidth="288"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*" MinWidth="358"/>
        </Grid.ColumnDefinitions>
		
		<local:CommandItemCollector DataContext="{Binding ElementName=Playlist}">
			<local:CommandItem Id="LoadPlaylistCommand" Command="{Binding LoadPlaylistCommand}" AssignedKey="O"/>
		</local:CommandItemCollector>

		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition/>
			</Grid.RowDefinitions>

			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>

				<Button Grid.Column="0" Style="{DynamicResource SquareImageButtonStyle}"
						Content="{DynamicResource NewFileImage}"
						ToolTipService.ShowOnDisabled="True" ToolTip="Create a new playlist"
						Command="{StaticResource NewPlaylistCommand}"/>
				
				<Button Grid.Column="1" Style="{DynamicResource SquareImageButtonStyle}"
						Content="{DynamicResource OpenFileImage}"
						ToolTipService.ShowOnDisabled="True" ToolTip="Load a playlist"
						Command="{StaticResource LoadPlaylistCommand}"/>
				
				<Button Grid.Column="2" Style="{DynamicResource SquareImageButtonStyle}"
						Content="{DynamicResource SaveFileImage}"
						ToolTipService.ShowOnDisabled="True" ToolTip="Save the playlist in a new file"
						Command="{StaticResource SavePlaylistCommand}"/>
				
				<Button Grid.Column="4" Style="{DynamicResource SquareImageButtonStyle}"
						Content="{DynamicResource PrintImage}"
						ToolTipService.ShowOnDisabled="True" ToolTip="Print playlist"
						Command="{StaticResource PrintCommand}"/>

				<Button Grid.Column="5" Style="{DynamicResource SquareImageButtonStyle}"
						Content="{DynamicResource ExportImage}"
						ToolTipService.ShowOnDisabled="True" ToolTip="Export playlist"
						Command="{StaticResource ExportCommand}"/>

				<Button Grid.Column="7" Style="{DynamicResource SquareImageButtonStyle}"
						Content="{DynamicResource SettingsImage}"
						ToolTipService.ShowOnDisabled="True" ToolTip="Open settings dialog"
						Command="{StaticResource ShowSettingsCommand}"/>
				
				<Button Grid.Column="8" Style="{DynamicResource SquareImageButtonStyle}"
						Content="{DynamicResource AboutImage}"
						ToolTipService.ShowOnDisabled="True" ToolTip="Open about dialog"
						Command="{StaticResource ShowAboutCommand}"/>
			</Grid>

			<res:PlaylistControl x:Name="Playlist" Grid.Row="1"
								 ItemsSource="{Binding ActionList.Items}"
								 MouseDoubleClick="ActionList_MouseDoubleClick"
								 Background="{x:Null}"
								 BorderBrush="{DynamicResource FrameBrush}"
								 Foreground="{DynamicResource MainTextBrush}"/>
		</Grid>
		
		<GridSplitter HorizontalAlignment="Center" Grid.Column="1" Style="{DynamicResource PanelSplitterStyle}"/>

		<Grid Grid.Column="2">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="2*"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="{res:ConfigBinding StatusWindowSplit}"/>
			</Grid.RowDefinitions>

			<Border BorderBrush="{DynamicResource FrameBrush}" BorderThickness="0,0,0,1">
				<Grid>
					<Border Height="{Binding ActualHeight, ElementName=ClockText}" HorizontalAlignment="Left" Padding="4">
						<Image Source="{DynamicResource DelayReferencePlayClockImage}"
							   ToolTip="Player clock: time since last start"/>
					</Border>
					
					<TextBlock Name="ClockText"
							   Style="{DynamicResource MainClockTextStyle}"
							   VerticalAlignment="Center"
							   Text="{Binding ActiveTime,
									  Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:hh\\:mm\\:ss}'}"/>
				</Grid>
			</Border>

			<Grid Grid.Row="1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="15"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="36"/>
					<RowDefinition Height="4"/>
					<RowDefinition Height="36"/>
				</Grid.RowDefinitions>

				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>
					
					<TextBlock Style="{DynamicResource ActionHeaderStyle}" Text="Now"/>
					<Button Grid.Row="1"
							Style="{DynamicResource SquareImageButtonStyle}"
							Width="Auto" Height="18"
							Content="{StaticResource SelectInListImage}"
							Command="{StaticResource SelectActiveCommand}"
							ToolTipService.ShowOnDisabled="True"
							ToolTip="Select the active action in the playlist"/>
				</Grid>
				
				<ContentControl Grid.Row="0" Grid.Column="2"
								Content="{Binding ActiveMainProducer, Converter={StaticResource PlayerActionPlaceholderConverter}}"
								ContentTemplateSelector="{DynamicResource PlaylistTemplateSelector}"/>

				<Grid Grid.Row="2" Grid.Column="0">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>

					<TextBlock Style="{DynamicResource ActionHeaderStyle}" Text="Next"/>
					<Button Grid.Row="1"
							Style="{DynamicResource SquareImageButtonStyle}"
							Width="Auto" Height="18"
							Content="{StaticResource SelectInListImage}"
							Command="{StaticResource SelectNextCommand}"
							ToolTipService.ShowOnDisabled="True"
							ToolTip="Select the next action in the playlist"/>
				</Grid>
				<ContentControl Grid.Row="2" Grid.Column="2"
								Content="{Binding NextAction, Converter={StaticResource PlayerActionPlaceholderConverter}}"
								ContentTemplateSelector="{DynamicResource PlaylistTemplateSelector}"/>
			</Grid>
			
			<Border Grid.Row="2" BorderBrush="{DynamicResource FrameBrush}" BorderThickness="0,1" Padding="0,2">
				<DockPanel>
					<StackPanel Orientation="Horizontal">
						<Button Style="{DynamicResource RoundImageButtonStyle}" Content="{DynamicResource AgainButtonImage}"
								Command="{StaticResource PlayAgainCommand}"
								ToolTipService.ShowOnDisabled="True"
                                ToolTip="{Binding ReplayAction.Name, FallbackValue='Restart the last action', Converter={StaticResource StringFormatConverter}, ConverterParameter='Restart &quot;{0}&quot;'}"/>

						<Button Style="{DynamicResource RoundImageButtonStyle}" Content="{DynamicResource NextButtonImage}"
								Height="56"
								Command="{StaticResource PlayNextCommand}"
								ToolTipService.ShowOnDisabled="True"
                                ToolTip="{Binding NextAction.Name, FallbackValue='No next action', Converter={StaticResource StringFormatConverter}, ConverterParameter='Start next action &quot;{0}&quot;'}"/>
				
						<Button Style="{DynamicResource RoundImageButtonStyle}"
								Content="{DynamicResource ResumeButtonImage}"
								Command="{StaticResource ResumeCommand}"
								ToolTipService.ShowOnDisabled="True" ToolTip="Resume playback (main line only)"/>
				
						<Button Style="{DynamicResource RoundImageButtonStyle}"
								Content="{DynamicResource StopButtonImage}"
								Command="{StaticResource StopCommand}"
								ToolTipService.ShowOnDisabled="True" ToolTip="Stop/pause the playback"/>
				
						<Button Style="{DynamicResource RoundImageButtonStyle}"
								Content="{DynamicResource ResetButtonImage}"
								Command="{StaticResource ResetPlaylistCommand}"
								ToolTipService.ShowOnDisabled="True" ToolTip="Reset the list"/>

                        <Button Style="{DynamicResource RoundImageButtonStyle}"
								Content="{DynamicResource StartPlaylistButtonImage}"
								Command="{StaticResource StartPlaylistCommand}"
								ToolTipService.ShowOnDisabled="True" ToolTip="Start the playlist in passive mode"/>
                    </StackPanel>
					
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
						<Button Style="{DynamicResource RoundImageButtonStyle}"
								Content="{DynamicResource RelativeVolumeUpButtonImage}"
								Command="{StaticResource RelativeVolumeUpCommand}"
								ToolTipService.ShowOnDisabled="True"
                                ToolTip="Increase relative volume of the selected action"/>
						
						<Button Style="{DynamicResource RoundImageButtonStyle}"
								Content="{DynamicResource RelativeVolumeDownButtonImage}"
								Command="{StaticResource RelativeVolumeDownCommand}"
								ToolTipService.ShowOnDisabled="True"
                                ToolTip="Decrease relative volume of the selected action"/>
					</StackPanel>
				</DockPanel>
			</Border>
			
			<Grid Grid.Row="3">
				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				
				<res:PlayerActionControl x:Name="ActionControl"
										 Style="{DynamicResource PlayerActionStyle}"/>

				<Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource FrameBrush}">
					<UniformGrid Rows="1">
						<TextBlock Style="{DynamicResource MainTextStyle}" VerticalAlignment="Center"
								   Text="Follow"/>
						<CheckBox Style="{DynamicResource CheckBoxWithTextStyle}"
								  IsChecked="{Binding FollowActionType, Converter={StaticResource EnumToTrueFalseFollowConverter}, ConverterParameter=ActiveAction}"
								  Content="Active"
								  ToolTip="Always show active action"/>
						<CheckBox Style="{DynamicResource CheckBoxWithTextStyle}"
								  IsChecked="{Binding FollowActionType, Converter={StaticResource EnumToTrueFalseFollowConverter}, ConverterParameter=ActiveProducer}"
								  Content="Producer"
								  ToolTip="Always show active producer"/>
						<CheckBox Style="{DynamicResource CheckBoxWithTextStyle}"
								  IsChecked="{Binding FollowActionType, Converter={StaticResource EnumToTrueFalseFollowConverter}, ConverterParameter=NextAction}"
								  Content="Next"
								  ToolTip="Always show next action"/>
					</UniformGrid>
				</Border>
			</Grid>
				
			<GridSplitter Grid.Row="4"
						  Style="{DynamicResource PanelSplitterStyle}"
						  VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

			<res:MessageLogControl x:Name="MessageLogger" Grid.Row="5" Style="{DynamicResource MessageLogStyle}"/>
		</Grid>
	</Grid>
</Window>
