<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:common="http://nextplayer.nikitins.dk/Common"
	xmlns:res="http://nextplayer.nikitins.dk/Resources"
    xmlns:local="clr-namespace:NextPlayer">

    <res:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter"/>
	<res:BooleanToVisibilityConverter x:Key="BooleanToVisibleCollapsedConverter"/>


	<!-- General styles -->
    <Style x:Key="TextBoxInEditorStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
        <Setter Property="IsReadOnly"
				Value="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type res:ChannelEditorControlBase}}}"/>
    </Style>


    <!-- Settings for a horizontal list of channels or links -->
    <Style x:Key="HorizontalSquareList" TargetType="{x:Type ItemsControl}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentPresenter}">
                    <Setter Property="Width"
							Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Links -->
    <ControlTemplate x:Key="ChannelLinkCellTemplate" TargetType="{x:Type res:ChannelLinkCell}">
        <Border BorderThickness="1" SnapsToDevicePixels="True"
				BorderBrush="{DynamicResource FrameBrush}"
				Background="Transparent">

			<ContentPresenter Visibility="{Binding HasLink, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibleCollapsedConverter}}"
							  Content="{Binding Link, RelativeSource={RelativeSource TemplatedParent}}"
							  ContentTemplate="{Binding Path=(res:ChannelEditorControlBase.LinkCellTemplate), RelativeSource={RelativeSource Self}}"/>
        </Border>
	</ControlTemplate>
	
	
    <Style x:Key="ChannelLinkCellStyle" TargetType="{x:Type res:ChannelLinkCell}">
        <Setter Property="Template" Value="{StaticResource ChannelLinkCellTemplate}"/>
		<Setter Property="Command" Value="{Binding ClickCommand, RelativeSource={RelativeSource Self}}"/>
	</Style>
	
	
	<!-- Link cell template; bound object is physical channel.
	     Logical channel is passed on in an attached property LogicalChannel.
	-->
    <DataTemplate x:Key="LinkCellTemplate" DataType="{x:Type common:ChannelBase}">
        <res:ChannelLinkCell Style="{DynamicResource ChannelLinkCellStyle}"
							 PhysicalChannel="{Binding Channel}"/>
    </DataTemplate>
	

	<!-- Single number representing a physical channel -->
    <DataTemplate x:Key="ChannelNumberTemplate" DataType="{x:Type common:ChannelBase}">
		<TextBlock Style="{DynamicResource MainTextStyle}" VerticalAlignment="Center"
				   Text="{Binding Channel}"
				   IsEnabled="{Binding IsEnabled}"
				   TextAlignment="Center"
				   ToolTipService.ShowOnDisabled="True"
				   ToolTip="{Binding Description}"/>
	</DataTemplate>


	<!-- Logical channels, column definitions -->
    <Style x:Key="LogicalChannelRowStyle" TargetType="{x:Type res:CustomizableGrid}">
		<Setter Property="Padding" Value="2,0"/>
        <Setter Property="ColumnDefList">
            <Setter.Value>
                <res:ColumnDefinitionList>
					<ColumnDefinition Width="Auto" SharedSizeGroup="ChannelNumber"/>
					<ColumnDefinition Width="Auto" SharedSizeGroup="EnabledFlag"/>
					<ColumnDefinition Width="*" MinWidth="80"/> <!-- Description -->
                    <ColumnDefinition Width="Auto" SharedSizeGroup="AdditionalSetup"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LinkList"/>
					<ColumnDefinition Width="Auto" SharedSizeGroup="ButtonTest"/>
					<ColumnDefinition Width="Auto" SharedSizeGroup="ButtonDelete"/>
                </res:ColumnDefinitionList>
            </Setter.Value>
		</Setter>
	</Style>
	
	
    <!-- Logical channel, table header (only first 3 columns) -->
    <DataTemplate x:Key="LogicalHeaderTemplate" DataType="{x:Type res:ChannelEditorControlBase}">
        <res:CustomizableGrid Style="{DynamicResource LogicalChannelRowStyle}">
            <TextBlock Grid.Column="0" Style="{DynamicResource ColumnHeaderStyle}" Text="Ch #"/>
            <TextBlock Grid.Column="1" Style="{DynamicResource ColumnHeaderStyle}" Text="Use"/>
            <TextBlock Grid.Column="2" Style="{DynamicResource ColumnHeaderStyle}" Text="Description"/>
			<TextBlock Grid.Column="4" Style="{DynamicResource ColumnHeaderStyle}" Text="Physical"/>
		</res:CustomizableGrid>
    </DataTemplate>

	
	<!-- Logical channel, table footer: [Add] button and list of channel numbers -->
    <DataTemplate x:Key="LogicalFooterTemplate" DataType="{x:Type res:ChannelEditorControlBase}">
        <res:CustomizableGrid Style="{DynamicResource LogicalChannelRowStyle}">
            <Button Grid.Column="0"
					Style="{DynamicResource SquareImageButtonStyle}"
					Content="{DynamicResource AddButtonImage}"
					Command="{Binding AddPhysicalCommand}"
					ToolTipService.ShowOnDisabled="True"
					ToolTip="Add a new physical channel"/>

			<!-- Physical channel list -->
            <ItemsControl Grid.Column="4"
						  Style="{DynamicResource HorizontalSquareList}"
						  ItemsSource="{Binding ChannelStorage.Physical, Mode=OneWay}"
						  ItemTemplate="{DynamicResource ChannelNumberTemplate}"/>
        </res:CustomizableGrid>
    </DataTemplate>


    <!-- Logical channel, table row with channel link list -->
    <DataTemplate x:Key="LogicalItemTemplate" DataType="{x:Type common:ChannelBase}">
        <res:CustomizableGrid Style="{DynamicResource LogicalChannelRowStyle}">
			<!-- Common data -->	
            <TextBlock Style="{DynamicResource MainTextStyle}"
					   VerticalAlignment="Center" HorizontalAlignment="Center"
					   Text="{Binding Channel}"/>
			<CheckBox Grid.Column="1" Style="{DynamicResource CheckBoxNoTextStyle}" IsChecked="{Binding IsEnabled}"/>
			
            <TextBox Grid.Column="2" Style="{DynamicResource TextBoxInEditorStyle}"
					 Text="{Binding Description}"/>

			<!-- Extra data -->
            <ContentControl Grid.Column="3"
							Visibility="{Binding LogicalItemSetupTemplate, RelativeSource={RelativeSource AncestorType={x:Type res:ChannelEditorControlBase}},
										Converter={StaticResource ObjectToVisibilityConverter}}"
							Content="{Binding}"
							ContentTemplate="{Binding LogicalItemSetupTemplate, RelativeSource={RelativeSource AncestorType={x:Type res:ChannelEditorControlBase}}}"/>
			
            <!-- Channel links -->
            <ItemsControl Grid.Column="4"
						  Style="{DynamicResource HorizontalSquareList}"
						  res:ChannelLinkCell.LogicalChannel="{Binding Channel}"
						  ItemsSource="{Binding ChannelStorage.Physical, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type res:ChannelEditorControlBase}}}"
						  ItemTemplate="{StaticResource LinkCellTemplate}"/>

            <!-- Control buttons -->
            <ToggleButton Grid.Column="5"
						  Style="{DynamicResource ToggleImageButtonStyle}"
						  Command="{Binding TestLogicalCommand, RelativeSource={RelativeSource AncestorType={x:Type res:ChannelEditorControlBase}}}"
						  CommandParameter="{Binding}"
						  IsChecked="{Binding IsActive, Mode=OneWay}"
						  Content="{StaticResource PreviewImage}"
						  ToolTip="Test channel"/>

            <Button Grid.Column="6"
					Style="{DynamicResource SquareImageButtonStyle}"
					Command="{Binding DeleteLogicalCommand, RelativeSource={RelativeSource AncestorType={x:Type res:ChannelEditorControlBase}}}"
					CommandParameter="{Binding}"
					Content="{StaticResource DeleteWindowImage}"
					ToolTipService.ShowOnDisabled="True"
					ToolTip="Delete channel"/>
        </res:CustomizableGrid>
    </DataTemplate>


    <!-- Template for channel editor body -->
    <ControlTemplate x:Key="ChannelEditorControlTemplate" TargetType="{x:Type res:ChannelEditorControlBase}">
        <StackPanel Grid.IsSharedSizeScope="True">
            <Button Style="{DynamicResource SquareImageButtonStyle}"
					HorizontalAlignment="Left"
					Content="{DynamicResource AddButtonImage}"
					Command="{Binding AddLogicalCommand}"
					ToolTipService.ShowOnDisabled="True"
					ToolTip="Add a new logical channel"/>

            <ContentPresenter Content="" ContentTemplate="{DynamicResource LogicalHeaderTemplate}"/>

            <ItemsControl ItemsSource="{Binding LogicalChannels, Mode=OneWay}"
						  ItemTemplate="{DynamicResource LogicalItemTemplate}"/>

            <res:EnvironmentSelector Style="{DynamicResource EnvironmentSelectorStyle}">
                <StackPanel>
					<ContentPresenter Content="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									  ContentTemplate="{DynamicResource LogicalFooterTemplate}"/>

                    <ContentControl Content="{Binding ChannelStorage.Physical, Mode=OneWay}"
									ContentTemplate="{Binding PhysicalHeaderTemplate}"/>

					<ItemsControl ItemsSource="{Binding ChannelStorage.Physical, Mode=OneWay}"/>

					<ContentControl Content="{Binding ChannelStorage.Physical, Mode=OneWay}"
									Visibility="{Binding PhysicalFooterTemplate, RelativeSource={RelativeSource AncestorType={x:Type res:ChannelEditorControlBase}},
												Converter={StaticResource ObjectToVisibilityConverter}}"
									ContentTemplate="{Binding PhysicalFooterTemplate}"/>
				</StackPanel>
            </res:EnvironmentSelector>
        </StackPanel>
    </ControlTemplate>


    <Style x:Key="ChannelEditorStyle" TargetType="{x:Type res:ChannelEditorControlBase}">
        <Setter Property="DataContext" Value="{Binding RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template" Value="{StaticResource ChannelEditorControlTemplate}"/>
	</Style>

</ResourceDictionary>
