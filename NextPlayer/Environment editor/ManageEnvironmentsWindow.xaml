<Window x:Class="ManageEnvironmentsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:res="http://nextplayer.nikitins.dk/Resources"
		xmlns:local="clr-namespace:NextPlayer;assembly="
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		mc:Ignorable="d"
		x:Name="Window"
        Title="Manage environments"
		Height="200" Width="350"
		MinHeight="78" MinWidth="200"
		Background="{DynamicResource BackgroundBrush}"
		Foreground="{DynamicResource MainTextBrush}"
		Icon="../Resources/Logo.ico"
		local:ManageEnvironmentsWindow.GeneratedHeaderTemplate="{DynamicResource PlaylistHeaderTemplate}"
		local:ManageEnvironmentsWindow.GeneratedCellTemplate="{DynamicResource PlaylistCellTemplate}">

	<Window.Resources>
		<res:StringToFontWeightConverter x:Key="StringToFontWeightConverter"/>
		<res:StringComparerConverter x:Key="StringComparerConverter"/>
		<res:StringComparerConverter x:Key="StringNotEqualConverter" NegateResult="True"/>
		<res:BooleanAndConverter x:Key="BooleanInverseAndConverter" NegateResult="True"/>


		<!-- Name column header and cell template -->

		<DataTemplate x:Key="ConfigNameHeaderTemplate" DataType="sys:String">
			<TextBlock Style="{DynamicResource ColumnHeaderStyle}"
                       HorizontalAlignment="Left"
                       Text="Environment"
                       ToolTip="Available environments, create a new one by copying from the drop-down list."/>
		</DataTemplate>


		<DataTemplate x:Key="ConfigNameCellTemplate" DataType="{x:Type local:NamedEnvironmentInfo}">
			<TextBox Style="{DynamicResource TextBoxStyle}"
					 Text="{Binding Name, UpdateSourceTrigger=LostFocus}"/>
		</DataTemplate>


		<!-- Local config column header and cell templates -->

		<DataTemplate x:Key="LocalConfigHeaderTemplate" DataType="sys:String">
            <TextBlock Style="{DynamicResource ColumnHeaderStyle}"
                       Text="Local"
                       ToolTip="Which configurations exist locally on this machine; only those are shown in the drop-down list."/>
        </DataTemplate>


		<DataTemplate x:Key="LocalConfigCellTemplate" DataType="{x:Type local:NamedEnvironmentInfo}">
			<CheckBox Style="{DynamicResource CheckBoxStyle}" HorizontalAlignment="Center"
					  IsChecked="{Binding HasLocal, UpdateSourceTrigger=PropertyChanged}"
					  IsEnabled="{Binding Name, Converter={StaticResource StringNotEqualConverter}, ConverterParameter={x:Static local:AppConfiguration.CurrentEnvironmentName}}"
					  ToolTip="Whether configuration exists locally on this machine"/>
		</DataTemplate>

		
		<!-- Playlist config column header and cell templates -->

		<DataTemplate x:Key="PlaylistHeaderTemplate" DataType="sys:String">
            <TextBlock Style="{DynamicResource MainTextStyle}" Margin="2,0"
					   FontWeight="{Binding Path=(TextBlock.Text), RelativeSource={RelativeSource Self},
									Converter={StaticResource StringToFontWeightConverter},
									ConverterParameter={x:Static sys:Environment.MachineName}}"
					   Text="{Binding}">

                <TextBlock.ToolTip>
                    <ToolTip>
                        <TextBlock>
                            <Run Text="Which configurations are defined for machine"/>
                            <Run Text="{Binding Mode=OneWay}"/>
                        </TextBlock>
                    </ToolTip>
                </TextBlock.ToolTip>
            </TextBlock>
		</DataTemplate>
		
		
		<DataTemplate x:Key="PlaylistCellTemplate" DataType="{x:Type local:PlaylistEnvironmentDescription}">
			<CheckBox Style="{DynamicResource CheckBoxStyle}" HorizontalAlignment="Center"
					  IsChecked="{Binding Exists, UpdateSourceTrigger=PropertyChanged}"
					  ToolTip="Whether configuration is defined for machine">
				
				<CheckBox.IsEnabled>
					<MultiBinding Converter="{StaticResource BooleanInverseAndConverter}">
						<Binding Path="EnvName" Converter="{StaticResource StringComparerConverter}" ConverterParameter="{x:Static local:AppConfiguration.CurrentEnvironmentName}"/>
						<Binding Path="MachineName" Converter="{StaticResource StringComparerConverter}" ConverterParameter="{x:Static sys:Environment.MachineName}"/>
					</MultiBinding>
				</CheckBox.IsEnabled>
			</CheckBox>
		</DataTemplate>
		
		
		<!-- General DataGrid column header and cell styles -->

		<Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
			<Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
			<Setter Property="Foreground" Value="{DynamicResource MainTextBrush}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource FrameBrush}"/>
			<Setter Property="BorderThickness" Value="0,0,0,1"/>
		</Style>

		
		<Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
			<Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
			<Setter Property="Foreground" Value="{DynamicResource MainTextBrush}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource FrameBrush}"/>
			<Setter Property="BorderThickness" Value="0"/>
		</Style>
		

		<!-- DataGrid style -->
		
		<Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
			<Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
			<Setter Property="Foreground" Value="{DynamicResource MainTextBrush}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource FrameBrush}"/>
			<Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource FrameBrush}"/>
			<Setter Property="VerticalGridLinesBrush" Value="{x:Null}"/>
			<Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}"/>
			<Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderStyle}"/>
			<Setter Property="AutoGenerateColumns" Value="False"/>
			<Setter Property="SelectionMode" Value="Single"/>
			<Setter Property="CanUserResizeRows" Value="False"/>
			<Setter Property="HeadersVisibility" Value="Column"/>
			<Setter Property="GridLinesVisibility" Value="Horizontal"/>
			<Setter Property="Padding" Value="1,0"/>
		</Style>
	</Window.Resources>

	
	<Grid Grid.IsSharedSizeScope="True">
		<DataGrid Name="EnvTable" Style="{StaticResource DataGridStyle}"
				  ItemsSource="{Binding EnvironmentList, RelativeSource={RelativeSource AncestorType={x:Type local:ManageEnvironmentsWindow}}}"
				  FrozenColumnCount="1">

			<DataGrid.Columns>
				<local:DataGridTemplateBoundColumn
					Width="*"
					Binding="{Binding}"
					HeaderTemplate="{StaticResource ConfigNameHeaderTemplate}"
					CellTemplate="{StaticResource ConfigNameCellTemplate}"/>
				
				<local:DataGridTemplateBoundColumn
					Width="*"
                    Header="Local"
					Binding="{Binding}"
					HeaderTemplate="{StaticResource LocalConfigHeaderTemplate}"
					CellTemplate="{StaticResource LocalConfigCellTemplate}"/>
			</DataGrid.Columns>
		</DataGrid>
	</Grid>
</Window>
