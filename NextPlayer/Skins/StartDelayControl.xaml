<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:audio="http://schemas.nikitins.dk/audio"
	xmlns:res="http://nextplayer.nikitins.dk/Resources"
	xmlns:common="http://nextplayer.nikitins.dk/Common">

	<res:EnumToBooleanConverter x:Key="EnumToTrueFalseConverter"/>
	<res:BooleanNotConverter x:Key="BooleanNotConverter"/>
	<res:TimeSpanFormatConverter x:Key="TimeSpanFormatConverter"/>
	<common:StringFormatConverter x:Key="StringFormatConverter"/>


	<ControlTemplate x:Key="StartDelayControlTemplate" TargetType="{x:Type res:StartDelayControl}">
		<DockPanel>
			<RadioButton x:Name="radioManual" Style="{DynamicResource ToggleImageSettingButtonStyle}"
						 GroupName="DelayType"
						 IsChecked="{Binding DelayType, ConverterParameter={x:Static audio:DelayTypes.Manual}, Converter={StaticResource EnumToTrueFalseConverter}}"
						 Content="{StaticResource ManualDelayImage}"
						 ToolTip="Started manually"/>

			<RadioButton Style="{DynamicResource ToggleImageSettingButtonStyle}"
						 GroupName="DelayType"
						 IsChecked="{Binding DelayType, ConverterParameter={x:Static audio:DelayTypes.TimedFromStart}, Converter={StaticResource EnumToTrueFalseConverter}}"
						 Content="{DynamicResource DelayAfterStartImage}">
				
				<RadioButton.ToolTip>
					<MultiBinding Converter="{StaticResource StringFormatConverter}" ConverterParameter="&quot;{0}&quot; start + {1}">
						<Binding Path="DelayReferenceName"/>
						<Binding Path="DelayBefore" Converter="{StaticResource TimeSpanFormatConverter}"/>
					</MultiBinding>
				</RadioButton.ToolTip>
			</RadioButton>

			<RadioButton Style="{DynamicResource ToggleImageSettingButtonStyle}"
						 GroupName="DelayType"
						 IsChecked="{Binding DelayType, ConverterParameter={x:Static audio:DelayTypes.TimedBeforeEnd}, Converter={StaticResource EnumToTrueFalseConverter}}"
						 Content="{DynamicResource DelayBeforeEndImage}">
				
				<RadioButton.ToolTip>
					<MultiBinding Converter="{StaticResource StringFormatConverter}" ConverterParameter="&quot;{0}&quot; end - {1}">
						<Binding Path="DelayReferenceName"/>
						<Binding Path="DelayBefore" Converter="{StaticResource TimeSpanFormatConverter}"/>
					</MultiBinding>
				</RadioButton.ToolTip>
			</RadioButton>

			<RadioButton Style="{DynamicResource ToggleImageSettingButtonStyle}"
						 GroupName="DelayType"
						 IsChecked="{Binding DelayType, ConverterParameter={x:Static audio:DelayTypes.TimedAfterEnd}, Converter={StaticResource EnumToTrueFalseConverter}}"
						 Content="{DynamicResource DelayAfterEndImage}">
				
				<RadioButton.ToolTip>
					<MultiBinding Converter="{StaticResource StringFormatConverter}" ConverterParameter="&quot;{0}&quot; end + {1}">
						<Binding Path="DelayReferenceName"/>
						<Binding Path="DelayBefore" Converter="{StaticResource TimeSpanFormatConverter}"/>
					</MultiBinding>
				</RadioButton.ToolTip>
			</RadioButton>

            <TextBox Style="{DynamicResource TextBoxStyle}"
					 IsEnabled="{Binding IsChecked, Converter={StaticResource BooleanNotConverter}, ElementName=radioManual}"
					 Text="{Binding DelayBefore, Converter={StaticResource TimeSpanFormatConverter}}"/>
        </DockPanel>
	</ControlTemplate>


	<Style x:Key="StartDelayControlStyle" TargetType="{x:Type res:StartDelayControl}">
		<Setter Property="Template" Value="{DynamicResource StartDelayControlTemplate}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ActionButtonPlainBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource ButtonTextBrush}"/>
	</Style>

</ResourceDictionary>